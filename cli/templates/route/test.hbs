import { describe, it, expect } from 'vitest'; import request from 'supertest';
import express from 'express'; import routes from '../../routes/{{kebabName}}';
// Create a minimal test app const createTestApp = () => { const app =
express(); app.use(express.json()); app.use('/api/v1/{{kebabName}}', routes);
return app; }; describe('{{pascalName}}
Routes', () => { describe('GET /api/v1/{{kebabName}}', () => { it('should
respond to GET request', async () => { const app = createTestApp(); const
response = await request(app) .get('/api/v1/{{kebabName}}') .expect(500); //
Erwarten 500 wegen fehlender DB expect(response.status).toBe(500); });
it('should handle pagination parameters', async () => { const app =
createTestApp(); const response = await request(app) .get('/api/v1/{{kebabName}}?limit=5&offset=0')
.expect(500); expect(response.status).toBe(500); }); }); });