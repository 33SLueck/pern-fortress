# Loki Cache: Nur .keep versionieren
loki/cache/
!loki/cache/.keep
# Dependencies
node_modules/
**/node_modules/

# Environment Variables
.env*
!.env.example

# Build Outputs
dist/
**/dist/
build/
**/build/

# Coverage Reports
coverage/
**/coverage/

# TypeScript
*.tsbuildinfo
tsconfig.tsbuildinfo

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
.idea/
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# OS generated files
Thumbs.db

# Docker
.dockerignore

# Database
*.db
*.sqlite
*.sqlite3

# Prisma
prisma/migrations/migration_lock.toml

internal

grafana_data/

# Docker volumes
postgres_data/
prometheus/

# Log-Ordner: Nur .keep versionieren, alle anderen Dateien ignorieren
log/
!log/.keep



# Loki und Promtail: Nur Laufzeitdaten ignorieren, nicht die Konfiguration
loki/chunks/
loki/index/
loki/boltdb-shipper/
loki/wal/
promtail/log/

# Aber: .keep-Dateien in diesen Ordnern immer versionieren
!loki/chunks/.keep
!loki/index/.keep
!loki/wal/.keep

# Leere .keep-Dateien in den Ordnern lassen, damit die Struktur versioniert bleibt


.history/
